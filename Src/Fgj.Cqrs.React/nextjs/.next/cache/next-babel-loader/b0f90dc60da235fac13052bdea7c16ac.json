{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Fgj.Cqrs\\\\Src\\\\Fgj.Cqrs.React\\\\nextjs\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport \"isomorphic-fetch\";\nexport default class Index extends Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, this.props.repositories.map(repo => __jsx(\"h1\", {\n      key: repo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, repo.name)));\n  }\n\n}\n\n_defineProperty(Index, \"getInitialProps\", async () => {\n  const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n  return {\n    repositories: await response.json()\n  };\n});","map":{"version":3,"sources":["C:/Projetos/Fgj.Cqrs/Src/Fgj.Cqrs.React/nextjs/pages/index.js"],"names":["React","Component","Index","render","props","repositories","map","repo","id","name","response","fetch","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAS3CE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4BC,IAAI,IAC/B;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,IAAxB,CADD,CADH,CADF;AAOD;;AAjB0C;;gBAAxBP,K,qBACM,YAAY;AACnC,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CAD0B,CAA5B;AAIA,SAAO;AAAEN,IAAAA,YAAY,EAAE,MAAMK,QAAQ,CAACE,IAAT;AAAtB,GAAP;AACD,C","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"isomorphic-fetch\";\r\n\r\nexport default class Index extends Component {\r\n  static getInitialProps = async () => {\r\n    const response = await fetch(\r\n      \"https://api.github.com/orgs/rocketseat/repos\"\r\n    );\r\n\r\n    return { repositories: await response.json() };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.repositories.map(repo => (\r\n          <h1 key={repo.id}>{repo.name}</h1>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}